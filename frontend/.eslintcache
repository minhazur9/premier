[{"/home/min/Projects/premier/frontend/src/config/routes.js":"1","/home/min/Projects/premier/frontend/src/App.js":"2","/home/min/Projects/premier/frontend/src/components/Footer.js":"3","/home/min/Projects/premier/frontend/src/components/movies/MovieCard.js":"4","/home/min/Projects/premier/frontend/src/components/shows/ShowCard.js":"5","/home/min/Projects/premier/frontend/src/pages/Signup.js":"6","/home/min/Projects/premier/frontend/src/index.js":"7","/home/min/Projects/premier/frontend/src/pages/Login.js":"8","/home/min/Projects/premier/frontend/src/components/movies/MovieNav.js":"9","/home/min/Projects/premier/frontend/src/pages/Home.js":"10","/home/min/Projects/premier/frontend/src/reportWebVitals.js":"11","/home/min/Projects/premier/frontend/src/components/Navbar.js":"12","/home/min/Projects/premier/frontend/src/pages/movies/MovieDetails.js":"13","/home/min/Projects/premier/frontend/src/pages/movies/MovieIndex.js":"14","/home/min/Projects/premier/frontend/src/pages/shows/ShowIndex.js":"15","/home/min/Projects/premier/frontend/src/pages/shows/ShowDetails.js":"16","/home/min/Projects/premier/frontend/src/pages/ProfileDetails.js":"17","/home/min/Projects/premier/frontend/src/components/profile/MovieRecs.js":"18","/home/min/Projects/premier/frontend/src/components/profile/ShowRecs.js":"19","/home/min/Projects/premier/frontend/src/components/profile/ProfilePic.js":"20","/home/min/Projects/premier/frontend/src/components/VideoModal.js":"21","/home/min/Projects/premier/frontend/src/pages/ProfileIndex.js":"22","/home/min/Projects/premier/frontend/src/components/Slider.js":"23","/home/min/Projects/premier/frontend/src/components/Reviews.js":"24","/home/min/Projects/premier/frontend/src/components/ReviewModal.js":"25","/home/min/Projects/premier/frontend/src/components/profile/ReviewList.js":"26"},{"size":1814,"mtime":1607066447050,"results":"27","hashOfConfig":"28"},{"size":2996,"mtime":1607470054290,"results":"29","hashOfConfig":"28"},{"size":245,"mtime":1606961971709,"results":"30","hashOfConfig":"28"},{"size":1808,"mtime":1607057843270,"results":"31","hashOfConfig":"28"},{"size":1803,"mtime":1607058870910,"results":"32","hashOfConfig":"28"},{"size":3275,"mtime":1607105603416,"results":"33","hashOfConfig":"28"},{"size":558,"mtime":1606343423382,"results":"34","hashOfConfig":"28"},{"size":1688,"mtime":1607105485656,"results":"35","hashOfConfig":"28"},{"size":0,"mtime":1607060336780,"results":"36","hashOfConfig":"28"},{"size":1238,"mtime":1607571712110,"results":"37","hashOfConfig":"28"},{"size":362,"mtime":1606341604172,"results":"38","hashOfConfig":"28"},{"size":1056,"mtime":1607590601598,"results":"39","hashOfConfig":"28"},{"size":7123,"mtime":1607499067533,"results":"40","hashOfConfig":"28"},{"size":4936,"mtime":1607471270570,"results":"41","hashOfConfig":"28"},{"size":4699,"mtime":1607587892450,"results":"42","hashOfConfig":"28"},{"size":7015,"mtime":1607499106183,"results":"43","hashOfConfig":"28"},{"size":1802,"mtime":1607591288208,"results":"44","hashOfConfig":"28"},{"size":1711,"mtime":1607487269460,"results":"45","hashOfConfig":"28"},{"size":1684,"mtime":1607487276000,"results":"46","hashOfConfig":"28"},{"size":176,"mtime":1606950227989,"results":"47","hashOfConfig":"28"},{"size":1636,"mtime":1607108480556,"results":"48","hashOfConfig":"28"},{"size":851,"mtime":1607489689660,"results":"49","hashOfConfig":"28"},{"size":2904,"mtime":1607583498230,"results":"50","hashOfConfig":"28"},{"size":1947,"mtime":1607499250013,"results":"51","hashOfConfig":"28"},{"size":2850,"mtime":1607481573480,"results":"52","hashOfConfig":"28"},{"size":2069,"mtime":1607495707253,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1qxg6zd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},"/home/min/Projects/premier/frontend/src/config/routes.js",[],["125","126"],"/home/min/Projects/premier/frontend/src/App.js",[],["127","128"],"/home/min/Projects/premier/frontend/src/components/Footer.js",[],["129","130"],"/home/min/Projects/premier/frontend/src/components/movies/MovieCard.js",[],["131","132"],"/home/min/Projects/premier/frontend/src/components/shows/ShowCard.js",[],"/home/min/Projects/premier/frontend/src/pages/Signup.js",["133"],"import React from 'react'\nimport axios from 'axios'\n\nclass Signup extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        verify: '',\n        completed: false\n    }\n\n    // Set state to the current input\n    handleInputChange = (e) => {\n        if (e.target.name === 'completed') {\n            this.setState((prevState) => {\n                return {completed: !prevState.completed };\n            });\n        } else {\n            this.setState({[e.target.name]: e.target.value})\n        }\n    }\n\n    render() {\n        return (\n            <>\n            <h1 className=\"signup-header\">Signup</h1>\n            <form  onSubmit={e => {\n                this.props.handleSignup(e, this.state)\n                if(this.state.password !== this.state.verify ) return;\n                this.props.redirect()\n                }}  \n                className=\"signup-form\">\n            <div className=\"input-form\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input \n                type=\"text\"\n                onChange={this.handleInputChange}   \n                value={this.state.firstName} \n                name=\"firstName\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input \n                type=\"text\"\n                onChange={this.handleInputChange}   \n                value={this.state.lastName} \n                name=\"lastName\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"email\">Email</label>\n                <input \n                type=\"email\"\n                onChange={this.handleInputChange}   \n                value={this.state.email} \n                name=\"email\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"username\">Username</label>\n                <input \n                type=\"text\"\n                onChange={this.handleInputChange}   \n                value={this.state.username} \n                name=\"username\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"password\">Password</label>\n                <input \n                type=\"password\"\n                onChange={this.handleInputChange}   \n                value={this.state.password} \n                name=\"password\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"verify\">Confirm Password</label>\n                <input \n                type=\"password\"\n                onChange={this.handleInputChange}   \n                value={this.state.verify} \n                name=\"verify\"\n                className=\"login-input\"\n                />\n            </div>\n            <input type=\"submit\" className=\"myButton\" />\n            </form>\n            \n            </>\n        )\n    }\n    \n}\n\nexport default Signup;","/home/min/Projects/premier/frontend/src/index.js",[],["134","135"],"/home/min/Projects/premier/frontend/src/pages/Login.js",["136"],"import React from 'react'\nimport axios from 'axios'\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        completed: false,\n        invalid: false\n    }\n\n    // Set state to the current input\n    handleInputChange = (e) => {\n        if (e.target.name === 'completed') {\n            this.setState((prevState) => {\n                return {completed: !prevState.completed };\n            });\n        } else {\n            this.setState({[e.target.name]: e.target.value})\n        }\n    }\n\n    render() {\n        return (\n            <>\n            <h1 className=\"login-header\">Login</h1>\n            <form  onSubmit={e => {\n                this.props.handleLogin(e, this.state)\n                this.props.redirect()\n            }} \n            className=\"login-form\">\n            <div className=\"input-form\">\n                <label htmlFor=\"username\">Username</label>\n                <input \n                type=\"text\"\n                onChange={this.handleInputChange}   \n                value={this.state.username} \n                name=\"username\"\n                className=\"login-input\"\n                />\n            </div>\n            <div className=\"input-form\">\n                <label htmlFor=\"password\">Password</label>\n                <input \n                type=\"password\"\n                onChange={this.handleInputChange}   \n                value={this.state.password} \n                name=\"password\"\n                className=\"login-input\"\n                />\n            </div>\n            <input type=\"submit\" className=\"myButton\" />\n            </form>\n            \n            </>\n        )\n    }\n    \n}\n\nexport default Login;","/home/min/Projects/premier/frontend/src/components/movies/MovieNav.js",[],"/home/min/Projects/premier/frontend/src/pages/Home.js",[],"/home/min/Projects/premier/frontend/src/reportWebVitals.js",[],"/home/min/Projects/premier/frontend/src/components/Navbar.js",[],["137","138"],"/home/min/Projects/premier/frontend/src/pages/movies/MovieDetails.js",["139","140","141","142","143","144","145"],"import React from 'react';\nimport axios from 'axios';\n\nimport VideoModal from '../../components/VideoModal';\nimport Reviews from '../../components/Reviews'\n\nclass MovieDetails extends React.Component {\n\n    state = {\n        movie: {},\n        userAverage: '---',\n        companyList: [],\n        loading: true,\n        clicked: false,\n        genreList: [],\n        trailerLink: ''\n    }\n\n    // Render Loading Icon\n    renderLoadingIcon() {\n        return (\n            <div className=\"lds-facebook details-loading-container\">\n            <div className='details-loading'>   \n            </div><div className='details-loading'>\n            </div><div className='details-loading'></div>\n            </div>\n        )\n    }\n\n    // Render all the production comapnies of the movie\n    renderProductionCompanies() {\n        return this.state.companyList.slice(0,3).map((company) => (\n            <li className=\"company-name\">{company.name}</li>\n        ))\n    }\n\n    renderCriticRating(criticAverage) {\n        let colorClass = \"\"\n        if (!Number(criticAverage)) colorClass = \"\"\n        else if (Number(criticAverage) >= 8) colorClass = \"good\"\n        else if (Number(criticAverage) >= 5) colorClass = \"meh\"\n        else colorClass = \"bad\"\n        return (\n            <div className={`score-container ${colorClass}`}>\n            {Number(criticAverage) >= 8 && console.log(this.className)}\n            {criticAverage.length === 1 ? criticAverage + '.0' : criticAverage}\n            {console.log(criticAverage.length)}\n        </div>\n        )\n    }\n\n    renderUserRating(userAverage) {\n        let colorClass = \"\"\n        if (!Number(userAverage)) {\n            userAverage = '---'\n            colorClass = \"\"\n        }\n        else if (Number(userAverage) >= 8) colorClass = \"good\"\n        else if (Number(userAverage) >= 5) colorClass = \"meh\"\n        else colorClass = \"bad\"\n        return (\n            <div className={`score-container user-score ${colorClass}`}>\n            {userAverage.length === 1 ? userAverage + '.0' : userAverage}\n            {console.log(userAverage.length)}\n        </div>\n        )\n    }\n\n    renderDate() {\n        const months = ['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']\n        const releaseDate = new Date(this.state.movie.release_date)\n        return (\n            <p className=\"movie-release\">Release: {`${months[releaseDate.getMonth()]} ${releaseDate.getDate()} ${releaseDate.getFullYear()}`}</p>\n        )\n    }\n\n    renderGenres() {\n        return this.state.genreList.slice(0,3).map((genre) => (\n            <li className=\"genre-name\">{genre.name}</li>\n        ))\n    }\n\n    renderTrailer() {\n        const movieId = this.props.movieId\n        const videoPath = 'https://www.youtube.com/embed/'\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${key}&language=en-US`)\n        .then((response) => {\n            if(response.data.results !== undefined && response.data.results.length > 0) {\n                const videoKey = response.data.results[0].key\n                this.setState({trailerLink:videoPath+videoKey})\n            }\n        })\n        \n    }\n\n    // Render all the info about the movie\n    renderMovieDetails() {\n        const criticAverage = Number(this.state.movie.vote_average).toString();\n        const userAverage = Number(this.state.userAverage).toString();\n        const imagePath = 'https://image.tmdb.org/t/p/original'\n        return (\n            <>\n                <div style={{backgroundImage: `url(${imagePath}${this.state.movie.poster_path})`}} className='movie-poster'></div>\n                <div className=\"details-text\">\n                {this.props.loggedIn && !this.state.clicked &&\n                <a onClick={this.handleAddToList} className=\"add-to-rec waves-effect waves-light btn\">Add to List</a> ||\n                this.props.loggedIn && this.state.clicked  &&\n                <a onClick={(e) => e.preventDefault()} className=\"add-to-rec waves-effect waves-light btn added\">Added</a>\n                }\n                    <h1 className=\"title\">{this.state.movie.title}</h1>\n                    <p className='tagline'>{this.state.movie.tagline}</p>\n                    <p className=\"critic-score-header\">Average Critic Score</p>\n                    {this.renderCriticRating(criticAverage)}\n                    <p className=\"user-score-header\">Average User Score</p>\n                    {this.renderUserRating(userAverage)}\n                    <p className=\"run-time\">Runtime: {this.state.movie.runtime} Minutes</p>\n                    <ul className=\"production\">{this.renderProductionCompanies()}</ul>\n                    <div className=\"column2\">\n                    {this.renderDate()}\n                    <ul className=\"genres\">{this.renderGenres()}</ul>\n                    </div>\n                    <div className=\"column3\">\n                    <p className=\"overview-header\">Overview</p>\n                    <p className=\"overview\">{this.state.movie.overview}</p>\n                    </div>\n                    <div className=\"column4\"><VideoModal trailerLink={this.state.trailerLink} /></div>\n                </div>\n            </>\n        )\n    }\n\n    handleAddToList = (e) => {\n        e.currentTarget.classList.toggle(\"added\");\n        e.preventDefault();\n        const config = {\n          method: 'post',\n          url: 'http://localhost:8000/premier/movies/add',\n          headers: { \n            'Authorization': `JWT ${localStorage.getItem('token')}`,\n          },\n          data : {\n              'movie_id': this.state.movie.id, \n              'title':this.state.movie.title,\n              'user': this.props.user.id\n          }\n        };\n        axios(config)\n        this.setState({clicked:true})\n        \n  }\n    getUserScore = (score) => {\n        this.setState({userAverage:score}) \n    }\n\n    componentDidMount() {\n        const movieId = this.props.movieId\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`)\n        .then((response) => {\n            this.setState({movie:response.data, \n                          companyList:response.data.production_companies, \n                          genreList:response.data.genres, \n                          loading:false})\n        })\n        this.renderTrailer()\n        for(let i = 0; i < this.props.movies.length; i++) {\n            if(this.props.movies[i].movie_id == this.props.movieId) {\n                this.setState({clicked:true})\n                return;\n            }\n        }\n        \n    }\n    \n    render() {\n        return(\n            <>\n                <div className='details-background'>\n                {this.state.loading ? this.renderLoadingIcon() : this.renderMovieDetails() }\n                </div>\n                <Reviews getUserScore={this.getUserScore} loggedIn={this.props.loggedIn} user={this.props.user} title={this.state.movie.title} movieId={this.props.movieId}/>\n            </>\n        )\n    }\n}\n\nexport default MovieDetails;","/home/min/Projects/premier/frontend/src/pages/movies/MovieIndex.js",["146","147"],"import React from 'react';\nimport axios from 'axios';\nimport MovieCard from '../../components/movies/MovieCard';\nimport {Link} from 'react-router-dom'\n\n\nclass MovieIndex extends React.Component {\n\n    state = {\n        movies: [],\n        loading: true,\n        page: 1,\n        catagory: 'now_playing',\n        header: 'Now Playing'\n    } \n\n    handlePrevMoviePage = () => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        const pageNum = this.state.page - 1;\n        const catagory = this.state.catagory;\n        this.setState({page:pageNum})\n        axios.get(`https://api.themoviedb.org/3/movie/${catagory}?api_key=${key}&language=en-US&page=${pageNum}`)\n            .then((response) => this.setState({movies: response.data.results, loading: false}))\n    }\n\n    handleNextMoviePage = () => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        const pageNum = this.state.page + 1;\n        const catagory = this.state.catagory;\n        this.setState({page:pageNum})\n                   https://api.themoviedb.org/3/movie/latest?api_key=<<api_key>>&language=en-US\n        axios.get(`https://api.themoviedb.org/3/movie/${catagory}?api_key=${key}&language=en-US&page=${pageNum}`)\n            .then((response) => this.setState({movies: response.data.results, loading: false}))\n    }\n\n    // Render Loading Icon\n    renderLoadingIcon() {\n        return (\n            <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n        )\n    }\n\n    // Render Movie Cards\n    renderMovieCards() {\n        const imagePath = 'https://image.tmdb.org/t/p/original'\n        return this.state.movies.map((movie) => {\n            return (\n                <MovieCard key={movie.id} id={movie.id} voteAverage={movie.vote_average} title={movie.title} image={`${imagePath}${movie.poster_path}`}/>   \n            )     \n        })\n    }\n     \n    componentDidMount() {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        const catagory = this.state.catagory;\n        console.log(catagory)\n        axios.get(`https://api.themoviedb.org/3/movie/${catagory}?api_key=${key}&language=en-US&page=1`)\n            .then((response) => this.setState({movies: response.data.results, loading: false}))\n    }\n    \n\n    renderPopular = (e) => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=1`)\n            .then((response) => this.setState({catagory:'popular', movies: response.data.results, header:'Popular'}) )\n    }\n\n    renderTopRated = (e) => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US&page=1`)\n            .then((response) => this.setState({catagory:'top_rated', movies: response.data.results, header:'Top Rated'}) )\n    }\n\n    renderNowPlaying = (e) => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`)\n            .then((response) => this.setState({catagory:'now_playing', movies: response.data.results, header:'Now Playing'}) )\n    }\n\n    renderUpcoming = (e) => {\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${key}&language=en-US&page=1`)\n            .then((response) => this.setState({catagory:'upcoming', movies: response.data.results, header:'Upcoming'}) )\n    }\n \n    componentWillUnmount() {\n        this._isMounted = false;\n     }\n     \n    render() {\n        return (\n            <>\n            <h1>{this.state.header}</h1>\n            <aside className='nav-wrapper #03a9f4 light-blue movie-nav '>\n            <ul>\n                <li className='catagory-item'><Link key={1} to='#' onClick={this.renderNowPlaying} className='catagory-link' >Now Playing</Link></li>\n                <li className='catagory-item'><Link key={2} to='#' onClick={this.renderPopular} className='catagory-link' >Popular</Link></li>\n                <li className='catagory-item'><Link key={3} to='#' onClick={this.renderTopRated} className='catagory-link' >Top Rated</Link></li>\n                <li className='catagory-item'><Link key={4} to='#' onClick={this.renderUpcoming} className='catagory-link' >Upcoming</Link></li>\n            </ul>\n    </aside>\n                <ul className=\"movie-list\">\n                {this.state.loading ? this.renderLoadingIcon() : this.renderMovieCards() }\n                {this.state.page < 70 &&\n                <Link key={5} to=\"#\" onClick={this.handleNextMoviePage}><i className=\"fas fa-arrow-circle-right fa-4x\"></i></Link> }\n                {this.state.page > 1 &&\n                <Link key={6} to=\"#\" onClick={this.handlePrevMoviePage}><i className=\"fas fa-arrow-circle-left fa-4x\"></i></Link> }\n                </ul>\n            </>\n        )\n    }\n}\n\nexport default MovieIndex;","/home/min/Projects/premier/frontend/src/pages/shows/ShowIndex.js",[],"/home/min/Projects/premier/frontend/src/pages/shows/ShowDetails.js",["148","149","150","151","152","153","154"],"import React from 'react';\nimport axios from 'axios';\n\nimport VideoModal from '../../components/VideoModal'\nimport Reviews from '../../components/Reviews'\n\nclass ShowDetails extends React.Component {\n\n    state = {\n        show: {},\n        userAverage: '---',\n        loading: true,\n        clicked:false,\n        genreList: [],\n        trailerLink: '',\n    }\n\n    // Render Loading Icon\n    renderLoadingIcon() {\n        return (\n            <div className=\"lds-facebook details-loading-container\">\n            <div className='details-loading'>   \n            </div><div className='details-loading'>\n            </div><div className='details-loading'></div>\n            </div>\n        )\n    }\n\n    renderCriticRating(criticAverage) {\n        let colorClass = \"\"\n        if (!Number(criticAverage)) colorClass = \"\"\n        else if (Number(criticAverage) >= 8) colorClass = \"good\"\n        else if (Number(criticAverage) >= 5) colorClass = \"meh\"\n        else colorClass = \"bad\"\n        return (\n            <div className={`score-container ${colorClass}`}>\n            {criticAverage.length === 1 ? criticAverage + '.0' : criticAverage}\n        </div>\n        )\n    }\n\n    renderTrailer() {\n        const showId = this.props.showId\n        const videoPath = 'https://www.youtube.com/embed/'\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/tv/${showId}/videos?api_key=${key}&language=en-US`)\n        .then((response) => {\n            console.log(response.data)\n            if(response.data.results !== undefined && response.data.results.length > 0) {\n                const videoKey = response.data.results[0].key\n                this.setState({trailerLink:videoPath+videoKey})\n            }\n        })\n        \n    }\n\n\n    renderUserRating(userAverage) {\n        let colorClass = \"\"\n        if (!Number(userAverage)) {\n            userAverage = '---'\n            colorClass = \"\"\n        }\n        else if (Number(userAverage) >= 8) colorClass = \"good\"\n        else if (Number(userAverage) >= 5) colorClass = \"meh\"\n        else colorClass = \"bad\"\n        return (\n            <div className={`score-container user-score ${colorClass}`}>\n            {Number(userAverage) >= 8 && console.log(this.className)}\n            {userAverage.length === 1 ? userAverage + '.0' : userAverage}\n        </div>\n        )\n    }\n\n    handleAddToList = (e) => {\n          e.currentTarget.classList.toggle(\"added\");\n          e.preventDefault();\n          const config = {\n            method: 'post',\n            url: 'http://localhost:8000/premier/shows/add',\n            headers: { \n              'Authorization': `JWT ${localStorage.getItem('token')}`,\n            },\n            data : {\n                'show_id': this.state.show.id, \n                'title':this.state.show.name,\n                'user': this.props.user.id\n            }\n          };\n          axios(config)\n          this.setState({clicked:true})\n          \n    }\n\n    renderDates() {\n        const months = ['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']\n        const releaseDate = new Date(this.state.show.first_air_date)\n        const lastDate = new Date(this.state.show.last_air_date)\n        return (\n            <p className=\"dates\">{`${months[releaseDate.getMonth()]} ${releaseDate.getDate()} ${releaseDate.getFullYear()} -\n                                         ${months[lastDate.getMonth()]} ${lastDate.getDate()} ${lastDate.getFullYear()}`}\n                    </p>\n        )\n    }\n    \n    // Render All the data of the show\n    renderShowDetails() {\n        const userAverage = Number(this.state.userAverage).toString();\n        const criticAverage = Number(this.state.show.vote_average).toString();\n        const imagePath = 'https://image.tmdb.org/t/p/original'\n        return (\n            <>\n                <div style={{backgroundImage: `url(${imagePath}${this.state.show.poster_path})`}} className='movie-poster'></div>\n                <div className=\"details-text\">\n                <h1>{this.props.loggedIn}</h1>\n                {this.props.loggedIn && !this.state.clicked &&\n                <a onClick={this.handleAddToList} className=\"add-to-rec waves-effect waves-light btn\">Add to List</a> ||\n                this.props.loggedIn && this.state.clicked  &&\n                <a onClick={(e) => e.preventDefault()} className=\"add-to-rec waves-effect waves-light btn added\">Added</a>\n                }\n                \n                    <h1 className='title'>{this.state.show.name}</h1>\n                    <p className='tagline'>{this.state.show.tagline}</p>\n                    <p className=\"critic-score-header\">Average Critic Score</p>\n                    {this.renderCriticRating(criticAverage)}\n                    <p className=\"user-score-header\">Average User Score</p>\n                    {this.renderUserRating(userAverage)}\n                    <p className=\"episode-count\">{this.state.show.number_of_episodes} Episodes</p>\n                    <p className=\"season-count\">{this.state.show.number_of_seasons} Seasons</p>\n                    <div className=\"column2\">\n                    {this.renderDates()}\n                    <ul className=\"genres\">{this.renderGenres()}</ul>\n                    </div>\n                    <div className=\"column3\">\n                    <p className=\"overview-header\">Overview</p>\n                    <p className=\"overview\">{this.state.show.overview}</p>\n                    </div>\n                    <div className=\"column4\"><VideoModal trailerLink={this.state.trailerLink} /></div>\n                </div>\n                </>\n        )\n    }\n\n    renderGenres() {\n        return this.state.genreList.slice(0,3).map((genre) => (\n            <li className=\"genre-name\">{genre.name}</li>\n        ))\n    }\n\n    getUserScore = (score) => {\n        this.setState({userAverage:score}) \n    }\n\n\n    componentDidMount() {\n        const showId = this.props.showId\n        const key = '47b253083f612b83066bfaf81a01e411'\n        axios.get(`https://api.themoviedb.org/3/tv/${showId}?api_key=${key}&language=en-US`)\n        .then((response) => {\n            console.log(response.data)\n            this.setState({show:response.data, loading:false, genreList:response.data.genres, showId:this.props.showId})\n        })\n        for(let i = 0; i < this.props.shows.length; i++) {\n            if(this.props.shows[i].show_id == this.props.showId) {\n                this.setState({clicked:true})\n                return;\n            }\n        }\n        this.renderTrailer()\n    }\n    \n    render() {\n        return(\n            <>\n                <div className='details-background'>\n                {this.state.loading ? this.renderLoadingIcon() : this.renderShowDetails() }\n                </div>\n                <Reviews getUserScore={this.getUserScore} loggedIn={this.props.loggedIn} title= {this.state.show.name} user = {this.props.user} showId = {this.props.showId}/>\n            </>\n        )\n    }\n}\n\nexport default ShowDetails;",["155","156"],"/home/min/Projects/premier/frontend/src/pages/ProfileDetails.js",["157"],"import React from 'react';\nimport axios from 'axios';\n\nimport MovieRecs from '../components/profile/MovieRecs'\nimport ShowRecs from '../components/profile/ShowRecs';\nimport ReviewList from '../components/profile/ReviewList';\n\nclass ProfileDetails extends React.Component {\n\n    state = {\n        profile: {},\n    }\n\n    componentDidMount() {\n        const profileId = this.props.profileId\n        axios.get(`http://localhost:8000/premier/profiles/${profileId}`)\n            .then((response) => {\n                this.setState({profile:response.data[0]})\n            })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n     }\n\n\n    render() {\n        const userId = this.props.userId\n        return (\n            <div className=\"profile-details\">\n            <h3 className=\"full-name\">{this.state.profile.first_name} {this.state.profile.last_name}</h3>\n            {this.state.profile.profile_pic && \n                <div className=\"profile-pic\"> <img className=\"pic-src\" src={`http://localhost:8000/${this.state.profile.profile_pic}`} alt=\"profile-pic\"/></div>\n            }\n            {this.state.profile.profile_pic == \"\" &&\n                <div className=\"profile-pic\"> <img className=\"pic-src\" src={`http://localhost:8000/static/default-picture_0_0.png`} alt=\"profile-pic\"/></div>\n             }\n            \n            <h3 className=\"reviews-list-header\">My Reviews</h3>\n            <ReviewList userId={userId} profileId={this.props.profileId}/>\n            <h3 className=\"movie-recs-header\">Movies</h3>\n            <MovieRecs userId={userId} profileId={this.props.profileId}/>\n            <h3 className=\"show-recs-header\">Shows</h3>\n            <ShowRecs userId={userId} profileId={this.props.profileId}/>\n            </div>\n        )\n    }\n}\n\nexport default ProfileDetails;","/home/min/Projects/premier/frontend/src/components/profile/MovieRecs.js",["158","159"],"import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nclass MovieRecs extends React.Component {\n    state = {\n        movies: [],\n    }\n\n    handleDelete = (e) => {\n        const userId = Number(this.props.profileId)+1\n        const movieId = e.currentTarget.parentNode.id\n\n        const config = {\n            method: 'get',\n            url: `http://localhost:8000/premier/profiles/${userId}/movies/${movieId}/delete`,\n            headers: { \n              'Authorization': `JWT ${localStorage.getItem('token')}`,\n            },\n          };\n          axios(config)\n          window.location.reload()\n    }\n\n    \n\n    componentDidMount() {\n        const userId = Number(this.props.profileId)+1\n        axios.get(`http://localhost:8000/premier/profiles/${userId}/movies`)\n        .then((response) => this.setState({movies:response.data}))\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n     }\n\n    renderMovies() {\n        return this.state.movies.map((movie) => {\n            return(\n                <li id={movie.movie_id} className=\"recs\"><Link key={movie.movie_id} className=\"rec-link\" to={`/movies/${movie.movie_id}`}><p>{movie.title}</p></Link>\n                {this.props.userId-1 == this.props.profileId &&\n                <a onClick={this.handleDelete} className=\"delete-from-rec waves-effect waves-light btn\">Delete</a>\n                }\n                </li>\n            )\n            \n        })\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"movie-recs\">\n            <ul>\n            {this.renderMovies()}\n            </ul>\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default MovieRecs;","/home/min/Projects/premier/frontend/src/components/profile/ShowRecs.js",["160","161"],"import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nclass ShowRecs extends React.Component {\n    state = {\n        shows: []\n    }\n\n    componentDidMount() {\n        const userId = Number(this.props.profileId)+1\n        axios.get(`http://localhost:8000/premier/profiles/${userId}/shows`)\n        .then((response) => this.setState({shows:response.data}))\n    }\n\n    handleDelete = (e) => {\n        const userId = Number(this.props.profileId)+1\n        const showId = e.currentTarget.parentNode.id\n\n        const config = {\n            method: 'get',\n            url: `http://localhost:8000/premier/profiles/${userId}/shows/${showId}/delete`,\n            headers: { \n              'Authorization': `JWT ${localStorage.getItem('token')}`,\n            },\n          };\n          axios(config)\n          window.location.reload()\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n     }\n\n\n    rendershows() {\n        return this.state.shows.map((show) => {\n            return(\n                <li id={show.show_id }className=\"recs\"><Link key={show.show_id}className=\"rec-link\" to={`/shows/${show.show_id}`}><p>{show.title}</p></Link>\n                {this.props.userId-1 == this.props.profileId &&\n                <a onClick={this.handleDelete} className=\"delete-from-rec waves-effect waves-light btn\">Delete</a>\n                }\n                </li>\n            )\n            \n        })\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"movie-recs\">\n            <ul>\n            {this.rendershows()}\n            </ul>\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default ShowRecs;","/home/min/Projects/premier/frontend/src/components/profile/ProfilePic.js",[],"/home/min/Projects/premier/frontend/src/components/VideoModal.js",["162","163"],"import React from \"react\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nclass VideoModal extends React.Component {\n  componentDidMount() {\n    const options = {\n      onOpenStart: () => {\n        \n      },\n      onOpenEnd: () => {\n        \n      },\n      onCloseStart: () => {\n        \n      },\n      onCloseEnd: () => {\n        const iframe = document.querySelector('iframe')\n        if (iframe) {\n          const src = iframe.getAttribute('src')\n          document.querySelector('iframe').setAttribute('src',src)\n        }\n        \n      },\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: true,\n      startingTop: \"4%\",\n      endingTop: \"10%\",\n    };\n    M.Modal.init(this.Modal, options);\n  }\n\n  render() {\n    return (\n      <>\n        <a\n          className=\"waves-effect waves-light btn modal-trigger\"\n          data-target=\"modal1\"\n        >\n          Watch Trailer\n        </a>\n\n        <div\n          ref={Modal => {\n            this.Modal = Modal;\n          }}\n          id=\"modal1\"\n          className=\"modal\"\n        >\n          <div className=\"modal-content\">\n            {this.props.trailerLink !== \"\" \n            ? <iframe width=\"945\" height=\"506\" src={this.props.trailerLink} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            :  <h1 className=\"no-trailer\">No Trailer Available</h1>\n            }\n          </div>\n          <div className=\"modal-footer\">\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoModal;","/home/min/Projects/premier/frontend/src/pages/ProfileIndex.js",["164"],"import Axios from 'axios'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nclass ProfileIndex extends React.Component {\n    state = {\n        users:[]\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8000/premier/profiles/')\n        .then((response) => this.setState({users:response.data}))\n    }\n\n    renderProfiles = () => {\n        const users = this.state.users;\n        return users.map((user) => {\n            return (\n\n            <Link to={`/profiles/${user.user-1}`}><li className='profile-item'>{user.username}</li></Link>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <h1 className=\"profile-index-header\">Check out other lists!</h1>\n            {this.renderProfiles()}\n            </>\n        )\n    }\n\n}\n\nexport default ProfileIndex;","/home/min/Projects/premier/frontend/src/components/Slider.js",[],"/home/min/Projects/premier/frontend/src/components/Reviews.js",[],"/home/min/Projects/premier/frontend/src/components/ReviewModal.js",["165"],"import React from \"react\";\nimport M from \"materialize-css\";\nimport axios from 'axios';\nimport \"materialize-css/dist/css/materialize.min.css\";\n\n\n\nclass ReviewModal extends React.Component {\n  state = {\n    content: \"\",\n    score: 10,\n  }\n\n  thumb = document.querySelector(\"input[type=range]+.thumb .value\")\n\n  componentDidMount() {\n    const options = {\n      onOpenStart: () => {\n\n      },\n      onOpenEnd: () => {\n        \n      },\n      onCloseStart: () => {\n        \n      },\n      onCloseEnd: () => {\n        \n      },\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: true,\n      startingTop: \"4%\",\n      endingTop: \"10%\",\n    };\n    M.Modal.init(this.Modal, options);\n  }\n\n  handleChange = (e) => {\n     this.setState({content: e.target.value})\n  }\n\n  setScore = (e) => {\n    this.setState({score: document.querySelector('#rating-slider').value})\n  }\n\n  handleSubmit = (e) => {\n    let endpoint = \"\"\n    if(this.props.showId) endpoint = 'http://localhost:8000/premier/shows/reviews/add'\n    else endpoint = 'http://localhost:8000/premier/movies/reviews/add'\n      const config = {\n        method: 'post',\n        url: endpoint,\n        headers: { \n          'Authorization': `JWT ${localStorage.getItem('token')}`,\n        },\n        data : {\n            'show_id': this.props.showId, \n            'title': this.props.title,\n            'movie_id': this.props.movieId,\n            \"content\": this.state.content,\n            'score': this.state.score,\n            'user': this.props.user.id,\n            'username':this.props.user.username\n        }\n      };\n      axios(config)\n\n    \n  }\n\n  render() {\n    return (\n      <>\n        <a\n          className=\"waves-effect waves-light btn modal-trigger add-review\"\n          data-target=\"modal2\"\n        >\n          Add Review\n        </a>\n\n        <div\n          ref={Modal => {\n            this.Modal = Modal;\n          }}\n          id=\"modal2\"\n          className=\"modal\"\n        >\n          <div className=\"modal-content\">\n          <h3 className=\"score-header\">Rate it!</h3>\n            <form action=\"\" onSubmit={this.handleSubmit}>\n                <p class=\"range-field\">\n                    <input onChange={this.setScore}  type=\"range\" id=\"rating-slider\" min=\"1\" max=\"10\" />\n                </p>\n                <h4 className=\"score-header\">Review</h4>\n                <textarea onChange={this.handleChange} name=\"review-content\" id=\"review-content\" cols=\"20\" rows=\"30\"></textarea>\n                <button className=\"waves-effect waves-light btn review-submit\">Submit</button>\n            </form>\n            <button className=\"modal-action modal-close waves-effect waves-light btn review-cancel\">Cancel</button>\n          </div>\n          <div className=\"modal-footer\">\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ReviewModal;","/home/min/Projects/premier/frontend/src/components/profile/ReviewList.js",["166","167"],"import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nclass ReviewList extends React.Component {\n    state = {\n        reviews: [],\n    }\n\n    handleDelete = (e) => {\n        const userId = Number(this.props.profileId)+1\n        const reviewId = e.currentTarget.parentNode.id\n        console.log(e.currentTarget.parentNode)\n        const config = {\n            method: 'get',\n            url: `http://localhost:8000/premier/profiles/${userId}/reviews/${reviewId}/delete`,\n            headers: { \n              'Authorization': `JWT ${localStorage.getItem('token')}`,\n            },\n          };\n          axios(config)\n          window.location.reload()\n          \n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n     }\n    \n    componentDidMount() {\n        const userId = Number(this.props.profileId)+1\n        axios.get(`http://localhost:8000/premier/profiles/${userId}/reviews`)\n        .then((response) => this.setState({reviews:response.data}))\n    }\n\n    renderReviews() {\n        return this.state.reviews.map((review) => {\n            let id = '';\n            let type = '';\n            if(review.movie_id) {\n                id = review.movie_id\n                type = 'movies'\n            }\n            else {\n                id = review.show_id\n                type = 'shows'\n                console.log(id)\n            }\n            return(\n                <li id={id} className=\"recs\"><Link key={id} className=\"rec-link\" to={`/${type}/${id}`}><p>{review.title}<span className=\"score-span\">{review.score}/10</span></p></Link>\n                {this.props.userId-1 == this.props.profileId &&\n                <a onClick={this.handleDelete} className=\"delete-from-rec waves-effect waves-light btn\">Delete</a>\n                }\n                </li>\n            )\n            \n        })\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"review-list\">\n                {this.renderReviews()}\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default ReviewList;",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"168","replacedBy":"174"},{"ruleId":"170","replacedBy":"175"},{"ruleId":"168","replacedBy":"176"},{"ruleId":"170","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"168","replacedBy":"182"},{"ruleId":"170","replacedBy":"183"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":106,"column":61,"nodeType":"188","messageId":"189","endLine":106,"endColumn":63},{"ruleId":"190","severity":1,"message":"191","line":107,"column":17,"nodeType":"192","endLine":107,"endColumn":103},{"ruleId":"186","severity":1,"message":"187","line":107,"column":119,"nodeType":"188","messageId":"189","endLine":107,"endColumn":121},{"ruleId":"186","severity":1,"message":"193","line":107,"column":119,"nodeType":"188","messageId":"189","endLine":107,"endColumn":121},{"ruleId":"186","severity":1,"message":"193","line":108,"column":60,"nodeType":"188","messageId":"189","endLine":108,"endColumn":62},{"ruleId":"190","severity":1,"message":"191","line":109,"column":17,"nodeType":"192","endLine":109,"endColumn":114},{"ruleId":"194","severity":1,"message":"195","line":168,"column":46,"nodeType":"196","messageId":"197","endLine":168,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":31,"column":20,"nodeType":"200","messageId":"201","endLine":33,"endColumn":96},{"ruleId":"202","severity":1,"message":"203","line":31,"column":20,"nodeType":"180","messageId":"204","endLine":31,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":116,"column":61,"nodeType":"188","messageId":"189","endLine":116,"endColumn":63},{"ruleId":"190","severity":1,"message":"191","line":117,"column":17,"nodeType":"192","endLine":117,"endColumn":103},{"ruleId":"186","severity":1,"message":"187","line":117,"column":119,"nodeType":"188","messageId":"189","endLine":117,"endColumn":121},{"ruleId":"186","severity":1,"message":"193","line":117,"column":119,"nodeType":"188","messageId":"189","endLine":117,"endColumn":121},{"ruleId":"186","severity":1,"message":"193","line":118,"column":60,"nodeType":"188","messageId":"189","endLine":118,"endColumn":62},{"ruleId":"190","severity":1,"message":"191","line":119,"column":17,"nodeType":"192","endLine":119,"endColumn":114},{"ruleId":"194","severity":1,"message":"195","line":164,"column":44,"nodeType":"196","messageId":"197","endLine":164,"endColumn":46},{"ruleId":"168","replacedBy":"205"},{"ruleId":"170","replacedBy":"206"},{"ruleId":"194","severity":1,"message":"195","line":35,"column":45,"nodeType":"196","messageId":"197","endLine":35,"endColumn":47},{"ruleId":"194","severity":1,"message":"195","line":41,"column":38,"nodeType":"196","messageId":"197","endLine":41,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":42,"column":17,"nodeType":"192","endLine":42,"endColumn":105},{"ruleId":"194","severity":1,"message":"195","line":40,"column":38,"nodeType":"196","messageId":"197","endLine":40,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":41,"column":17,"nodeType":"192","endLine":41,"endColumn":105},{"ruleId":"190","severity":1,"message":"191","line":38,"column":9,"nodeType":"192","endLine":41,"endColumn":10},{"ruleId":"207","severity":1,"message":"208","line":54,"column":15,"nodeType":"192","endLine":54,"endColumn":206},{"ruleId":"178","severity":1,"message":"209","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":76,"column":9,"nodeType":"192","endLine":79,"endColumn":10},{"ruleId":"194","severity":1,"message":"195","line":51,"column":38,"nodeType":"196","messageId":"197","endLine":51,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":52,"column":17,"nodeType":"192","endLine":52,"endColumn":105},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],["210"],["211"],["210"],["211"],["210"],["211"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["210"],["211"],["210"],["211"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Unexpected mix of '||' and '&&'.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused",["210"],["211"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation"]